<!-- Inspired by: https://www.codewithrandom.com/2024/02/25/html-game-code/ -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Car Racing Game</title>
    <style>
        body {
            background-color: #333;
            color: #fff;
            font-family: 'Arial', sans-serif;
            text-align: center;
            margin: 0;
        }
        canvas {
            background-color: #555;
        }
    </style>
</head>
<body>
    <h1>Car Racing Game</h1>
    <canvas id="gameCanvas" width="400" height="600"></canvas>
    <script>
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');

        const car = {
            x: canvas.width / 2 - 25,
            y: canvas.height - 60,
            width: 50,
            height: 50,
            speed: 5
        };

        const obstacles = [];
        let score = 0;

        function createObstacle() {
            const obstacle = {
                x: Math.random() * (canvas.width - 30),
                y: -30,
                width: 30,
                height: 30,
                speed: 3
            };
            obstacles.push(obstacle);
        }

        function drawCar() {
            ctx.fillStyle = 'red';
            ctx.fillRect(car.x, car.y, car.width, car.height);
        }

        function drawObstacles() {
            ctx.fillStyle = 'blue';
            for (const obstacle of obstacles) {
                ctx.fillRect(obstacle.x, obstacle.y, obstacle.width, obstacle.height);
            }
        }

        function update() {
            // Move car
            if (keys['ArrowLeft'] && car.x > 0) {
                car.x -= car.speed;
            }
            if (keys['ArrowRight'] && car.x < canvas.width - car.width) {
                car.x += car.speed;
            }

            // Move obstacles
            for (let i = obstacles.length - 1; i >= 0; i--) {
                obstacles[i].y += obstacles[i].speed;
                if (obstacles[i].y > canvas.height) {
                    obstacles.splice(i, 1);
                    score++;
                }
            }

            // Collision detection
            for (const obstacle of obstacles) {
                if (car.x < obstacle.x + obstacle.width &&
                    car.x + car.width > obstacle.x &&
                    car.y < obstacle.y + obstacle.height &&
                    car.y + car.height > obstacle.y) {
                    alert('Game Over! Score: ' + score);
                    document.location.reload();
                }
            }

            // Create new obstacles
            if (Math.random() < 0.02) {
                createObstacle();
            }
        }

        function draw() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawCar();
            drawObstacles();
            ctx.fillStyle = 'white';
            ctx.font = '20px Arial';
            ctx.fillText('Score: ' + score, 10, 20);
        }

        const keys = {};
        window.addEventListener('keydown', (e) => {
            keys[e.key] = true;
        });
        window.addEventListener('keyup', (e) => {
            keys[e.key] = false;
        });

        function gameLoop() {
            update();
            draw();
            requestAnimationFrame(gameLoop);
        }

        gameLoop();
    </script>
</body>
</html>